changeCase(x,casing)
concat()
input(idx)
identity(x)
squeeze(l)
trimList(list,remove_multiple_spaces)
prependIfNonEmptyList(list, pre)
appendIfNonEmptyList(list, app)
commaAndIfy(str, skip, mode)
commaAndIfyList(list, skip, mode)
uniqueify(y)
generateEmbeddedSequences(list, strings)
selectSubstrListByLength(li, i1, i2)
selectSubstrListByAbsIndex(li, i1, i2)
selectSubstrListFromKthPattern(x, regexStr, k)
selectSubstrListUntilStartKthPattern(x, regexStr, k)
selectSubstrListUntilEndKthPattern(x, regexStr, k)
projectKthOccurence(x, regexStr, k, mode)
removeChar(a, b)
replaceChar(a, b1, b2)
replaceKthOccurence(x, c1, c2, k)
replaceEveryKthOccurence(x, c1, c2, k, startIndex)
insertCharFromStart(x, c, idx)
insertCharFromEnd(x, c, idx)
selectField(a, b, i, inputAsDefault)
deleteField(a, b, i, inputAsDefault)
insertField(a, b, i, newStuff)
permuteFields(x, delim,perm)
embellishField(x,delim, i, left, right)
summarizeField(a, b, i, summaryType)
extractPatternFromFields(x, pattern, delim)
alpha_sort(a, c)
alpha_sort_by_field(a, d, i, order)
case_insensitive_sort(a, order)
uniqueify_in_order(list)
uniqueify_by_column(matrix, col)
raw_union(l1, l2)
set_union(l1, l2)
intersect(l1, l2)
set_difference(l1, l2)
set_xor(l1, l2)
countOccurences(x, l)
countListEltOccurences(x, l)
join(l, delim)
splitExpr(e, delim)
matricize(l, delim)
dematricize(m, delim)
selectMatrixColumns(m, cols)
concatList()
concatListMatrix()
selectFieldList(a, b, i, inputAsDefault)
deleteFieldList(a, b, i, inputAsDefault)
selectEveryKthFieldList(x, delim, k, startIndex)
deleteEveryKthFieldList(x, delim, k, startIndex)
removeEveryKthElement(list, startIndex, k)
mergeRowsKAtATime(list, delim, k)
mergeRowsUntilPattern(list, delim, pattern)
mergeRowsOnFieldEquality(list, dlm, index)
mergeRows(list, delim, predicate)
splitRowsOnFieldEquality(list, dlm, index)
splitRows(list, predicate)
selectElementsBeginningWith(list, str)
selectElementsNotBeginningWith(list, str)
selectElementsEndingWith(list, str)
selectElementsNotEndingWith(list, str)
summarizeIfContains(list, inp, out)
summarizeIfStartsWith(list, inp, out)
summarizeIfEndsWith(list, inp, out)
appendIfContainsList(list, inp, out)
appendIfNotContainsList(list, inp, out)
appendIfStartsWithList(list, inp, out)
appendIfEndsWithList(list, inp, out)
prependIfContainsList(list, inp, out)
prependIfNotContainsList(list, inp, out)
prependIfStartsWithList(list, inp, out)
prependIfEndsWithList(list, inp, out)
firstPhoneNumber(x)
formatPhoneNumber(phonenum, addCountryCode, softenAreaCode)
firstDateLikeThing(x)
hasStringifiedDate(y)
hasAnythingDateLike(x)
dateify(x, delim, yearLast, monthBeforeDay, trimZeros)
findDayOfWeek(x)
bringToUSDateFormat(x)
createDateObject(x, monthBeforeDay)
formatAllDates(x, monthBeforeDay, format, delim, padZeros, monthAsStr, abbreviateMonth, ordinal)
formatDateString(x, monthBeforeDay, format, delim, padZeros, monthAsStr, abbreviateMonth, ordinal)
formatDateObject(d, format, delim, padZeros, monthAsStr, abbreviateMnth, ordinal)
generateDateSequence(x, monthBeforeDay, format, delim, monthAsStr, abbreviateMonth, padZeros, ordinal, incrementType)
addDates(x, monthBeforeDay, additionType)
modifyTimes(x, scheme)
formatAllYears(x, format)
lookupKey(key, dictionary)
abbreviateDay(x)
abbreviateMonth(x)
ordinalize(x)
fancy_index(arr, i)
fancy_index_set(arr, i, val)
deleteKth(x, st, k)
lookup(maplist, delim, x, NAstring)
numList(n,start)
addNums(list, delim, start)
sum(list)
expandSpaces(x, i)
generateSpaces(i)
prettyPrintFields(list, widths, regexes)
toWords(s, system)
toWordsList(list, system)
Replace(x, foo, bar)
replaceGlobal(x, foo, bar)
longestCommonSubstring(string1, string2)
removeDigits(x)
removeNonDigits(x)
resplit(list, d1, d2)
Reverse(list)